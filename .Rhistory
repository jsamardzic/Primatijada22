predictionData <- df[-index,]
genTrainingData <- function(df, q){
indeksi <- sample(1:nrow(df), size = q*nrow(df))
return(indeksi)
}
index <- genTrainingData(df, 0.75)
trainingData <- df[index,]
predictionData <- df[-index,]
index <- genTrainingData(dfSimple, 0.75)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
index <- genTrainingData(dfSimple, 0.60)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
model <- rpart(WL ~ .-diffPTS-diffFGpct-diffFGM-diffDREB, data = trainingData)
rpart.plot(model)
model$variable.importance
model <- prune.rpart(model, cp=0.03) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
View(dfSimple)
model <- rpart(WL ~ .-diffPTS, data = trainingData)
rpart.plot(model)
model$variable.importance
model <- rpart(WL ~ .-diffPTS-diffFGpct-diffFGM, data = trainingData)
rpart.plot(model)
model$variable.importance
index <- genTrainingData(df, 0.75)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
model <- rpart(WL ~ .-PTS-oppPTS-FGpct-oppFGpct-FGM-oppFGM, data = trainingData)
rpart.plot(model)
model$variable.importance
index <- genTrainingData(df, 0.75)
trainingData <- df[index,]
predictionData <- df[-index,]
model <- rpart(WL ~ .-PTS-oppPTS-FGpct-oppFGpct-FGM-oppFGM, data = trainingData)
rpart.plot(model)
model$variable.importance
model <- prune.rpart(model, cp=0.03) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
model <- rpart(WL ~ .-PTS-oppPTS-FGpct-oppFGpct-FGM-oppFGM, data = trainingData)
rpart.plot(model)
model$variable.importance
set.seed(1000)
index <- genTrainingData(dfSimple, 0.90)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
model <- rpart(WL ~ .-diffPTS-diffFGpct-diffFGM, data = trainingData)
rpart.plot(model)
model$variable.importance
model <- prune.rpart(model, cp=0.03) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
model <- rpart(WL ~ .-diffPTS-diffFGpct-diffFGM, data = trainingData)
rpart.plot(model)
model$variable.importance
index <- genTrainingData(dfSimple, 0.60)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
model <- rpart(WL ~ .-diffPTS-diffFGpct-diffFGM, data = trainingData)
rpart.plot(model)
model$variable.importance
index <- genTrainingData(df, 0.75)
trainingData <- df[index,]
predictionData <- df[-index,]
model <- rpart(WL ~ .-PTS-oppPTS-FGpct-oppFGpct-FGM-oppFGM, data = trainingData)
rpart.plot(model)
model$variable.importance
model <- prune.rpart(model, cp=0.03) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
model <- rpart(WL ~ .-PTS-oppPTS-FGpct-oppFGpct-FGM-oppFGM, data = trainingData)
rpart.plot(model)
model$variable.importance
model
results <- predict(model, predictionData, type = "class")
sum(results == predictionData$WL)/nrow(predictionData)
colnames(df)
df <- read_xlsx("./data/NBA_DataSet_Version1.xlsx")
df <- na.omit(df)
df <- df[-c(1:3, 5, 24)]
df$`W/L` <- as.factor(df$`W/L`)
df[20] <- 1:2160
colnames(df)[20] <- "index"
dfopp <- df[df$index%%2==0, ]
dfteam <- df[df$index%%2!=0, ]
colnames(dfopp) <- paste(replicate(20, "opp"), colnames(dfopp), sep="")
df <- cbind(dfteam, dfopp)
df <- df[-c(20,21,40)]
colnames(df)[1] <- "WL"
colnames(df)[6:8] <- c("ThreePM", "ThreePA", "ThreePpct")
colnames(df)[24:26] <- c("oppThreePM", "oppThreePA", "oppThreePpct")
colnames(df)[c(5,11,23,29)] <- c("FGpct", "FTpct", "oppFGpct", "oppFTpct")
df <- df[-14]
rm(dfopp)
rm(dfteam)
View(df)
df <- read_xlsx("./data/NBA_DataSet_Version1.xlsx")
df <- na.omit(df)
df <- df[-c(1:3, 5, 24)]
df$`W/L` <- as.factor(df$`W/L`)
df[20] <- 1:2160
colnames(df)[20] <- "index"
dfopp <- df[df$index%%2==0, ]
dfteam <- df[df$index%%2!=0, ]
colnames(dfopp) <- paste(replicate(20, "opp"), colnames(dfopp), sep="")
df <- cbind(dfteam, dfopp)
df <- df[-c(20,21,40)]
colnames(df)[1] <- "WL"
colnames(df)[6:8] <- c("ThreePM", "ThreePA", "ThreePpct")
colnames(df)[24:26] <- c("oppThreePM", "oppThreePA", "oppThreePpct")
colnames(df)[c(5,11,23,29)] <- c("FGpct", "FTpct", "oppFGpct", "oppFTpct")
colnames(df)
df <- read_xlsx("./data/NBA_DataSet_Version1.xlsx")
df <- na.omit(df)
df <- df[-c(1:3, 5, 24)]
df$`W/L` <- as.factor(df$`W/L`)
df[20] <- 1:2160
colnames(df)[20] <- "index"
dfopp <- df[df$index%%2==0, ]
dfteam <- df[df$index%%2!=0, ]
colnames(dfopp) <- paste(replicate(20, "opp"), colnames(dfopp), sep="")
df <- cbind(dfteam, dfopp)
df <- df[-c(20,21,40)]
colnames(df)[1] <- "WL"
colnames(df)[6:8] <- c("ThreePM", "ThreePA", "ThreePpct")
colnames(df)[24:26] <- c("oppThreePM", "oppThreePA", "oppThreePpct")
colnames(df)[c(5,11,23,29)] <- c("FGpct", "FTpct", "oppFGpct", "oppFTpct")
df <- df[c(-3,-6,-9,-14,-21,-24,-27,-32)]
rm(dfopp)
rm(dfteam)
df <- read_xlsx("./data/NBA_DataSet_Version1.xlsx")
df <- na.omit(df)
df <- df[-c(1:3, 5, 24)]
df$`W/L` <- as.factor(df$`W/L`)
df[20] <- 1:2160
colnames(df)[20] <- "index"
dfopp <- df[df$index%%2==0, ]
dfteam <- df[df$index%%2!=0, ]
colnames(dfopp) <- paste(replicate(20, "opp"), colnames(dfopp), sep="")
df <- cbind(dfteam, dfopp)
df <- df[-c(20,21,40)]
colnames(df)[1] <- "WL"
colnames(df)[6:8] <- c("ThreePM", "ThreePA", "ThreePpct")
colnames(df)[24:26] <- c("oppThreePM", "oppThreePA", "oppThreePpct")
colnames(df)[c(5,11,23,29)] <- c("FGpct", "FTpct", "oppFGpct", "oppFTpct")
colnames(df)
df <- read_xlsx("./data/NBA_DataSet_Version1.xlsx")
df <- na.omit(df)
df <- df[-c(1:3, 5, 24)]
df$`W/L` <- as.factor(df$`W/L`)
df[20] <- 1:2160
colnames(df)[20] <- "index"
dfopp <- df[df$index%%2==0, ]
dfteam <- df[df$index%%2!=0, ]
colnames(dfopp) <- paste(replicate(20, "opp"), colnames(dfopp), sep="")
df <- cbind(dfteam, dfopp)
df <- df[-c(20,21,40)]
colnames(df)[1] <- "WL"
colnames(df)[6:8] <- c("ThreePM", "ThreePA", "ThreePpct")
colnames(df)[24:26] <- c("oppThreePM", "oppThreePA", "oppThreePpct")
colnames(df)[c(5,11,23,29)] <- c("FGpct", "FTpct", "oppFGpct", "oppFTpct")
df <- df[c(-2,-3,-6,-9,-14,-20,-21,-24,-27,-32)]
rm(dfopp)
rm(dfteam)
colnames(df)
rm(dfopp)
rm(dfteam)
dfSimple <- data.frame(df[, 1:14])
dfSimple[-1] <- dfSimple[-1] - df[15:27]
colnames(dfSimple) <- paste(replicate(14, "diff"), colnames(dfSimple), sep="")
View(dfSimple)
dfSimple <- data.frame(df[, 1:14])
dfSimple <- data.frame(df[, 1:14])
dfSimple <- dfSimple[-1] - df[15:27]
colnames(dfSimple) <- paste(replicate(14, "diff"), colnames(dfSimple), sep="")
colnames(dfSimple)[1] <- "WL"
df <- read_xlsx("./data/NBA_DataSet_Version1.xlsx")
df <- na.omit(df)
df <- df[-c(1:3, 5, 24)]
df$`W/L` <- as.factor(df$`W/L`)
df[20] <- 1:2160
colnames(df)[20] <- "index"
dfopp <- df[df$index%%2==0, ]
dfteam <- df[df$index%%2!=0, ]
colnames(dfopp) <- paste(replicate(20, "opp"), colnames(dfopp), sep="")
df <- cbind(dfteam, dfopp)
df <- df[-c(20,21,40)]
colnames(df)[1] <- "WL"
colnames(df)[6:8] <- c("ThreePM", "ThreePA", "ThreePpct")
colnames(df)[24:26] <- c("oppThreePM", "oppThreePA", "oppThreePpct")
colnames(df)[c(5,11,23,29)] <- c("FGpct", "FTpct", "oppFGpct", "oppFTpct")
df <- df[c(-2,-3,-6,-9,-14,-20,-21,-24,-27,-32)]
rm(dfopp)
rm(dfteam)
dfSimple <- data.frame(df[, 1:14])
dfSimple <- dfSimple[-1] - df[15:27]
colnames(dfSimple) <- paste(replicate(14, "diff"), colnames(dfSimple), sep="")
colnames(dfSimple)[1] <- "WL"
dfSimple <- data.frame(df[, 1:14])
dfSimple <- dfSimple[-1] - df[15:27]
colnames(dfSimple) <- paste(replicate(13, "diff"), colnames(dfSimple), sep="")
colnames(dfSimple)[1] <- "WL"
df <- read_xlsx("./data/NBA_DataSet_Version1.xlsx")
df <- na.omit(df)
df <- df[-c(1:3, 5, 24)]
df$`W/L` <- as.factor(df$`W/L`)
df[20] <- 1:2160
colnames(df)[20] <- "index"
dfopp <- df[df$index%%2==0, ]
dfteam <- df[df$index%%2!=0, ]
colnames(dfopp) <- paste(replicate(20, "opp"), colnames(dfopp), sep="")
df <- cbind(dfteam, dfopp)
df <- df[-c(20,21,40)]
colnames(df)[1] <- "WL"
colnames(df)[6:8] <- c("ThreePM", "ThreePA", "ThreePpct")
colnames(df)[24:26] <- c("oppThreePM", "oppThreePA", "oppThreePpct")
colnames(df)[c(5,11,23,29)] <- c("FGpct", "FTpct", "oppFGpct", "oppFTpct")
df <- df[c(-2,-3,-6,-9,-14,-20,-21,-24,-27,-32)]
rm(dfopp)
rm(dfteam)
colnames(df)
dfSimple <- data.frame(df[, 1:14])
dfSimple[-1] <- dfSimple[-1] - df[15:27]
colnames(dfSimple) <- paste(replicate(13, "diff"), colnames(dfSimple), sep="")
colnames(dfSimple)[1] <- "WL"
genTrainingData <- function(df, q){
indeksi <- sample(1:nrow(df), size = q*nrow(df))
return(indeksi)
}
index <- genTrainingData(dfSimple, ratios[i])
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
genTrainingData <- function(df, q){
indeksi <- sample(1:nrow(df), size = q*nrow(df))
return(indeksi)
}
set.seed(500)
index <- genTrainingData(df, 0.75)
trainingData <- df[index,]
predictionData <- df[-index,]
prop.table(table(predictionData$WL))
prop.table(table(trainingData$WL))
index <- genTrainingData(df, 0.75)
trainingData <- df[index,]
predictionData <- df[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
model <- rpart(WL ~ ., data = trainingData)
rpart.plot(model)
model$variable.importance
model <- rpart(WL ~ .-FGpct, data = trainingData)
rpart.plot(model)
model$variable.importance
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
rpart.plot(model)
model$variable.importance
plotcp(model)
?plotcp
cptable(model)
cptable
?cptable
??cptable
printcp(model)
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
#rpart.plot(model)
#model$variable.importance
#printcp(model)
model <- prune.rpart(model, cp=0.025) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
#rpart.plot(model)
#model$variable.importance
#printcp(model)
model <- prune.rpart(model, cp=0.015) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
?printcp(model)
summary.rpart(model)
summary(model)
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
#rpart.plot(model)
rpart.plot(model)
summary(model)
model$variable.importance
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
rpart.plot(model)
model$variable.importance
#printcp(model)
summary(model)
plotcp(model)
printcp(model)
plotcp(model)
plotcp(model)
model <- prune.rpart(model, cp=0.02)
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
rpart.plot(model)
model <- prune.rpart(model, cp=0.02)
plotcp(model)
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
model <- prune.rpart(model, cp=0.025)
plotcp(model)
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
plotcp(model)
?rpart
model <- prune.rpart(model, cp=0.019330)
rpart.plot(model)
results <- predict(model, predictionData, type = "class")
sum(results == predictionData$WL)/nrow(predictionData)
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
rpart.plot(model)
model <- prune.rpart(model, cp=0.017) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
model$frame
model$cptable
model$numresp
model$parms
model$control
model$splits
View(dfSimple)
set.seed(500)
index <- genTrainingData(dfSimple, 0.75)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
rpart.plot(model)
model <- rpart(WL ~ .-FGpct-oppFGpct, data = trainingData)
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
model$variable.importance
model <- prune.rpart(model, cp=0.017)
rpart.plot(model)
plotcp(model)
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
model <- prune.rpart(model, cp=0.005)
plotcp(model)
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
plotcp(model)
model <- prune.rpart(model, cp=0.011)
rpart.plot(model)
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
model <- prune.rpart(model, cp=0.012) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
results <- predict(model, predictionData, type = "class")
sum(results == predictionData$WL)/nrow(predictionData)
index <- genTrainingData(dfSimple, 0.9)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
set.seed(500)
index <- genTrainingData(dfSimple, 0.9)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
set.seed(500)
index <- genTrainingData(dfSimple, 0.9)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
set.seed(12345)
index <- genTrainingData(dfSimple, 0.9)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
plotcp(model)
model <- prune.rpart(model, cp=0.011)
rpart.plot(model)
model$variable.importance
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
model$variable.importance
set.seed(12345)
index <- genTrainingData(dfSimple, 0.75)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
#prop.table(table(trainingData$WL))
#prop.table(table(predictionData$WL))
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
model <- prune.rpart(model, cp=0.012) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
set.seed(500)
index <- genTrainingData(dfSimple, 0.75)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
model <- prune.rpart(model, cp=0.012)
rpart.plot(model)
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
plotcp(model)
model <- prune.rpart(model, cp=0.027)
rpart.plot(model)
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
plotcp(model)
model <- prune.rpart(model, cp=0.012)
rpart.plot(model)
set.seed(1000)
index <- genTrainingData(dfSimple, 0.6)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
plotcp(model)
model <- prune.rpart(model, cp=0.011) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
model$variable.importance
results <- predict(model, predictionData, type = "class")
sum(results == predictionData$WL)/nrow(predictionData)
set.seed(12345)
index <- genTrainingData(dfSimple, 0.9)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
model <- prune.rpart(model, cp=0.011) #plotcp(model) za odnos cp - sizeOfTree
rpart.plot(model)
model$variable.importance
results <- predict(model, predictionData, type = "class")
sum(results == predictionData$WL)/nrow(predictionData)
df <- read_xlsx("./data/NBA_DataSet_Version1.xlsx")
df <- na.omit(df)
df <- df[-c(1:3, 5, 24)]
df$`W/L` <- as.factor(df$`W/L`)
df[20] <- 1:2160
colnames(df)[20] <- "index"
dfopp <- df[df$index%%2==0, ]
dfteam <- df[df$index%%2!=0, ]
colnames(dfopp) <- paste(replicate(20, "opp"), colnames(dfopp), sep="")
df <- cbind(dfteam, dfopp)
df <- df[-c(20,21,40)]
colnames(df)[1] <- "WL"
colnames(df)[6:8] <- c("ThreePM", "ThreePA", "ThreePpct")
colnames(df)[24:26] <- c("oppThreePM", "oppThreePA", "oppThreePpct")
colnames(df)[c(5,11,23,29)] <- c("FGpct", "FTpct", "oppFGpct", "oppFTpct")
df <- df[c(-2,-3,-6,-9,-14,-20,-21,-24,-27,-32)]
rm(dfopp)
rm(dfteam)
dfSimple <- data.frame(df[, 1:14])
dfSimple[-1] <- dfSimple[-1] - df[15:27]
colnames(dfSimple) <- paste(replicate(13, "diff"), colnames(dfSimple), sep="")
colnames(dfSimple)[1] <- "WL"
genTrainingData <- function(df, q){
indeksi <- sample(1:nrow(df), size = q*nrow(df))
return(indeksi)
}
set.seed(12345)
index <- genTrainingData(dfSimple, 0.9)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
#plotcp(model)
model <- prune.rpart(model, cp=0.011)
rpart.plot(model)
model$variable.importance
results <- predict(model, predictionData, type = "class")
sum(results == predictionData$WL)/nrow(predictionData)
set.seed(500)
index <- genTrainingData(dfSimple, 0.75)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
#plotcp(model)
model <- prune.rpart(model, cp=0.012)
rpart.plot(model)
model$variable.importance
results <- predict(model, predictionData, type = "class")
sum(results == predictionData$WL)/nrow(predictionData)
set.seed(1000)
index <- genTrainingData(dfSimple, 0.6)
trainingData <- dfSimple[index,]
predictionData <- dfSimple[-index,]
prop.table(table(trainingData$WL))
prop.table(table(predictionData$WL))
model <- rpart(WL ~ .-diffFGpct, data = trainingData)
rpart.plot(model)
#plotcp(model)
model <- prune.rpart(model, cp=0.011)
rpart.plot(model)
model$variable.importance
results <- predict(model, predictionData, type = "class")
sum(results == predictionData$WL)/nrow(predictionData)
summary(results)
library("randomForest")
install.packages("randomForest")
library("randomForest")
library("randomForest")
model <- randomForest(trainingData, ntree = 500)
summary(model)
model
print(model)
predict(model,predictionData)
model <- randomForest(WL~., data = trainingData, ntree = 500)
print(model)
model$votes
model$importance
predict(model,predictionData)
results <- predict(model,predictionData)
sum(results == predictionData$WL)/nrow(predictionData)
